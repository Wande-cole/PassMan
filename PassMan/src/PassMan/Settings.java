/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PassMan;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author WANDE
 */
public class Settings extends javax.swing.JFrame {
	private String oldUsername;
	private final String key;
	private ArrayList<String> fileContents;

	/**
	 * Creates new form Settings
	 */
	public Settings() {
		this.fileContents = new ArrayList<>();
		this.key = "tisisthe16bitkey";
		initComponents();
	}
	
	public void settingsState(String oldUsn){
		this.oldUsername = oldUsn;
		
		newUsername.setText(oldUsn);
	}

	/**
	 * This method is called from within the
	 * constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The
	 * content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        newUsername = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        changeUsername = new javax.swing.JButton();
        validateNewUsnPass = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        newPass = new javax.swing.JPasswordField();
        confirmNewPass = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        changePass = new javax.swing.JButton();
        oldPass = new javax.swing.JPasswordField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings - PassMan");
        setPreferredSize(new java.awt.Dimension(388, 520));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit username", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(376, 170));

        newUsername.setToolTipText("edit the username");

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        changeUsername.setText("Change username");
        changeUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeUsernameActionPerformed(evt);
            }
        });

        validateNewUsnPass.setToolTipText("input the correct password");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(validateNewUsnPass)
                    .addComponent(newUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(changeUsername))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(validateNewUsnPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(changeUsername)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edit password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 0)));
        jPanel2.setPreferredSize(new java.awt.Dimension(376, 170));

        jLabel3.setText("Old password");

        jLabel4.setText("New password");

        jLabel5.setText("Confirm new password");

        changePass.setText("Change password");
        changePass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePassActionPerformed(evt);
            }
        });

        oldPass.setToolTipText("enter the old password");

        jCheckBox1.setText("unhide password");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(newPass)
                    .addComponent(confirmNewPass)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(changePass))
                    .addComponent(oldPass))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oldPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(confirmNewPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changePass)
                    .addComponent(jCheckBox1))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void changeUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeUsernameActionPerformed
        //get new username and password
		if( "".equals(newUsername.getText()) || validateNewUsnPass.getPassword().length <1 ){
			JOptionPane.showMessageDialog(null, "Enter your new username and password");
		}else{
			//use account name to get file
			String filename = oldUsername + ".psm";
			String encPass = null, decPass = null;

			//read password from file
			FileReader readFile = null;
			try{
				readFile = new FileReader(filename);
			}catch(FileNotFoundException ex){
				JOptionPane.showMessageDialog(null, "Error: Account file not found");
			}
			BufferedReader readBuffer = new BufferedReader(readFile);
			String encContent = null;
			try{
				while( (encContent = readBuffer.readLine()) != null){
					fileContents.add(encContent);
				}
			}catch(IOException ex){
				JOptionPane.showMessageDialog(null, "Error: Could not read account file");
			}
			try {
				readBuffer.close();
			} catch (IOException ex) {
				JOptionPane.showMessageDialog(null, "Could not close read buffer");
			}
			
			Crypt ciph = new Crypt(key);
			try{
				decPass = ciph.decrypt(fileContents.get(0));
			}catch(Exception ex){
				JOptionPane.showMessageDialog(null, "Could not dercypt password");
			}
			
			//the new username and old password
			String newUsn = newUsername.getText();
			char[] password = validateNewUsnPass.getPassword();
			
			//if new username is not old username, and password is correct
			if( !newUsn.equals(oldUsername) ){
				if( Arrays.equals(password, decPass.toCharArray()) ){
					//create file with new name
					String newFilename = newUsn + ".psm";
					FileWriter writeFile = null;
					try{
						writeFile = new FileWriter( newFilename );
					}catch(IOException ex){
						JOptionPane.showMessageDialog(null, "Error: Could not create new account file");
					}
					BufferedWriter writeBuffer = new BufferedWriter(writeFile);

					//write contents of old file into new file
					for(int i=0; i<fileContents.size(); i++){
						try {
							writeBuffer.write(fileContents.get(i));
							writeBuffer.newLine();
						} catch (IOException ex) {
							JOptionPane.showMessageDialog(null, "Error: Could not transfer old accounts to new username");
						}
					}
					try {
						writeBuffer.close();
					} catch (IOException ex) {
						JOptionPane.showMessageDialog(null, "Error: Could not close buffer");
					}

					//delete old file
					File oldAcct = new File(filename);
					String oldAcctPath = oldAcct.getAbsolutePath();
					File oldAcctPathway = new File(oldAcctPath);
					if( !oldAcctPathway.delete() ){
						JOptionPane.showMessageDialog(null, "Error: Old account not Deleted");
					}
					
					//clear fields
					newUsername.setText("");
					validateNewUsnPass.setText("");
					
					//success message
					JOptionPane.showMessageDialog(null, "Success: Username has been changed");
					this.oldUsername = newUsn;
					Passwords.acctName = newUsn;
					
				}else{
					JOptionPane.showMessageDialog(null, "Error: Password incorrrect");
				}
			}else{
				JOptionPane.showMessageDialog(null, "Please input a new username");
			}
		
		}
    }//GEN-LAST:event_changeUsernameActionPerformed

    private void changePassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePassActionPerformed
        //check that fields are set
		if( oldPass.getPassword().length <1 || newPass.getPassword().length <1 || confirmNewPass.getPassword().length <1 ){
			JOptionPane.showMessageDialog(null, "All fields are required");
		}else{
			//use account name to get file
			String filename = oldUsername + ".psm";
			String encPass = null, decPass = null;

			//store file contents in arraylist
			FileReader readFile = null;
			try{
				readFile = new FileReader(filename);
			}catch(FileNotFoundException ex){
				JOptionPane.showMessageDialog(null, "Error: Account file not found");
			}
			BufferedReader readBuffer = new BufferedReader(readFile);
			String encContent = null;
			try{
				while( (encContent = readBuffer.readLine()) != null){
					fileContents.add(encContent);
				}
			}catch(IOException ex){
				JOptionPane.showMessageDialog(null, "Error: Could not read account file");
			}
			try {
				readBuffer.close();
			} catch (IOException ex) {
				JOptionPane.showMessageDialog(null, "Could not close read buffer");
			}
			
			Crypt ciph = new Crypt(key);
			try{
				//decrypt password from arraylist
				decPass = ciph.decrypt(fileContents.get(0));
			}catch(Exception ex){
				JOptionPane.showMessageDialog(null, "Could not dercypt password");
			}
			
			//the old password and new password are
			char[] oldPassword = oldPass.getPassword();
			char[] newPassword = newPass.getPassword();
			char[] confirmPass = confirmNewPass.getPassword();
			
			//if old password is correct
			if( Arrays.equals(oldPassword, decPass.toCharArray()) ){
				//if new password and confirmation password are the same
				if( Arrays.equals(newPassword, confirmPass) ){
					//delete old file
					File oldAcct = new File(filename);
					String oldAcctPath = oldAcct.getAbsolutePath();
					File oldAcctPathway = new File(oldAcctPath);
					if( !oldAcctPathway.delete() ){
						JOptionPane.showMessageDialog(null, "Error: Old account not Deleted");
					}
					
					//create file with same name
					FileWriter writeFile = null;
					try{
						writeFile = new FileWriter( filename );
					}catch(IOException ex){
						JOptionPane.showMessageDialog(null, "Error: Could not create new account file");
					}
					BufferedWriter writeBuffer = new BufferedWriter(writeFile);
					
					//encrypt new password
					Crypt cipha = new Crypt(key);
					String encNewPassword = null;
					try {
						encNewPassword = cipha.encrypt(new String(newPassword));
					} catch (Exception ex) {
						JOptionPane.showMessageDialog(null, "Error: Could not encrypt new password");
					}
					
					//change the old password in arraylist
					fileContents.set(0, encNewPassword);

					//write contents of arraylist into new file
					for(int i=0; i<fileContents.size(); i++){
						try {
							writeBuffer.write(fileContents.get(i));
							writeBuffer.newLine();
						} catch (IOException ex) {
							JOptionPane.showMessageDialog(null, "Error: Could not transfer old accounts to file");
						}
					}
					try {
						writeBuffer.close();
					} catch (IOException ex) {
						JOptionPane.showMessageDialog(null, "Error: Could not close buffer");
					}

					
					//clear fields
					oldPass.setText("");
					newPass.setText("");
					confirmNewPass.setText("");
					
					//success message
					JOptionPane.showMessageDialog(null, "Success: Password has been changed");
					
				}else{
					JOptionPane.showMessageDialog(null, "New password and confirmation do not match");
				}
			}else{
				JOptionPane.showMessageDialog(null, "Old password is incorrect");
			}
		
		}
    }//GEN-LAST:event_changePassActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Settings().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton changePass;
    private javax.swing.JButton changeUsername;
    private javax.swing.JPasswordField confirmNewPass;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPasswordField newPass;
    private javax.swing.JTextField newUsername;
    private javax.swing.JPasswordField oldPass;
    private javax.swing.JPasswordField validateNewUsnPass;
    // End of variables declaration//GEN-END:variables
}
